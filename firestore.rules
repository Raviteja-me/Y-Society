rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    match /posts/{postId} {
      allow read: if true;
      allow update: if isAuthenticated();
      allow create: if isAuthenticated();
      
      // Add validation for comments
      function isValidComment() {
        return request.resource.data.comments.size() == get(/databases/$(database)/documents/posts/$(postId)).data.comments.size() + 1
          && request.resource.data.comments.removeAll(get(/databases/$(database)/documents/posts/$(postId)).data.comments).size() == 1;
      }
      
      allow update: if isAuthenticated() 
        && (request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['comments', 'stats.comments']) 
            || request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['likes']));
    }
  }
}